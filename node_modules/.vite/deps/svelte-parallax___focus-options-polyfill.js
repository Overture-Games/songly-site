import {
  __commonJS
} from "./chunk-RSJERJUL.js";

// node_modules/focus-options-polyfill/index.js
var require_focus_options_polyfill = __commonJS({
  "node_modules/focus-options-polyfill/index.js"() {
    (function() {
      if (typeof window === "undefined" || typeof document === "undefined" || typeof HTMLElement === "undefined") {
        return;
      }
      var supportsPreventScrollOption = false;
      try {
        var focusElem = document.createElement("div");
        focusElem.addEventListener("focus", function(event) {
          event.preventDefault();
          event.stopPropagation();
        }, true);
        focusElem.focus(Object.defineProperty({}, "preventScroll", {
          get: function() {
            if (navigator && typeof navigator.userAgent !== "undefined" && navigator.userAgent && navigator.userAgent.match(/Edge\/1[7-8]/)) {
              return supportsPreventScrollOption = false;
            }
            supportsPreventScrollOption = true;
          }
        }));
      } catch (e) {
      }
      if (HTMLElement.prototype.nativeFocus === void 0 && !supportsPreventScrollOption) {
        HTMLElement.prototype.nativeFocus = HTMLElement.prototype.focus;
        var calcScrollableElements = function(element) {
          var parent = element.parentNode;
          var scrollableElements = [];
          var rootScrollingElement = document.scrollingElement || document.documentElement;
          while (parent && parent !== rootScrollingElement) {
            if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth) {
              scrollableElements.push([
                parent,
                parent.scrollTop,
                parent.scrollLeft
              ]);
            }
            parent = parent.parentNode;
          }
          parent = rootScrollingElement;
          scrollableElements.push([parent, parent.scrollTop, parent.scrollLeft]);
          return scrollableElements;
        };
        var restoreScrollPosition = function(scrollableElements) {
          for (var i = 0; i < scrollableElements.length; i++) {
            scrollableElements[i][0].scrollTop = scrollableElements[i][1];
            scrollableElements[i][0].scrollLeft = scrollableElements[i][2];
          }
          scrollableElements = [];
        };
        var patchedFocus = function(args) {
          if (args && args.preventScroll) {
            var evScrollableElements = calcScrollableElements(this);
            if (typeof setTimeout === "function") {
              var thisElem = this;
              setTimeout(function() {
                thisElem.nativeFocus();
                restoreScrollPosition(evScrollableElements);
              }, 0);
            } else {
              this.nativeFocus();
              restoreScrollPosition(evScrollableElements);
            }
          } else {
            this.nativeFocus();
          }
        };
        HTMLElement.prototype.focus = patchedFocus;
      }
    })();
  }
});

// dep:svelte-parallax___focus-options-polyfill
var svelte_parallax_focus_options_polyfill_default = require_focus_options_polyfill();
export {
  svelte_parallax_focus_options_polyfill_default as default
};
//# sourceMappingURL=svelte-parallax___focus-options-polyfill.js.map
